build: off

image:
  - Ubuntu
  - Visual Studio 2019

init:
  - git config --global core.autocrlf input

for:
-
  matrix:
    only:
      - image: Ubuntu
  branches:
    only:
      - build-graal
  artifacts:
  - path: src/main/resources/linux/x86_64/libsbtipcsocket.so
    name: libsbtipcsocket.so
  - path: src/main/resources/win32/x86_64/sbtipcsocket.dll
    name: sbtipcsocket.dll

  install:
  - sudo apt-get -y install mingw-w64
  - curl -sL https://github.com/sbt/sbt/releases/download/v1.3.10/sbt-1.3.10.tgz > ~/sbt-bin.tgz
  - mkdir ~/sbt
  - tar -xf ~/sbt-bin.tgz --directory ~/sbt
  - curl -sL https://raw.githubusercontent.com/shyiko/jabba/0.11.0/install.sh | bash && . ~/.jabba/jabba.sh
  - jabba install adopt@1.8.0-222
  - jabba use adopt@1.8.0-222
  - export JAVA_HOME="~/.jabba/jdk/adopt@1.8.0-222"
  - export PATH="$PATH:~/.jabba/jdk/adopt@1.8.0-222/bin"
  - export PATH="~/sbt/sbt/bin:$PATH"
  - export SBT_OPTS="-XX:MaxPermSize=1g -Xmx1g -Dfile.encoding=UTF8"

  cache:
    - /home/appveyor/.jabba/jdk
    - /home/appveyor/.sbt

  test_script:
    - sbt "jline2/publishLocal; ipcsocket / publishLocal"
    - sbt "sbtClientProj/genNativeExecutable"


-
  matrix:
    only:
      - image: Visual Studio 2019
  install:
    - cinst jdk8 -params 'installdir=C:\\jdk8'
    - SET JAVA_HOME=C:\jdk8
    - SET PATH=C:\jdk8\bin;%PATH%
    - SET CI=true

    - ps: |
        Add-Type -AssemblyName System.IO.Compression.FileSystem
        if (!(Test-Path -Path "C:\sbt" )) {
          (new-object System.Net.WebClient).DownloadFile(
            'https://github.com/sbt/sbt/releases/download/v1.3.10/sbt-1.3.10.zip',
            'C:\sbt-bin.zip'
          )
          [System.IO.Compression.ZipFile]::ExtractToDirectory("C:\sbt-bin.zip", "C:\sbt")
        }
    - SET PATH=C:\sbt\sbt\bin;%PATH%
    - SET SBT_OPTS=-XX:MaxPermSize=2g -Xmx4g -Dsbt.supershell=never -Dfile.encoding=UTF8
  cache:
    - '%USERPROFILE%/.sbt'

  test_script:
    - sbt "jline2/publishLocal; ipcsocket / publishLocal"
    - sbt "scripted actions/* classloader-cache/* nio/* watch/*" "testOnly sbt.ServerSpec"

