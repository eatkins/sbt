build: off

image:
  - MacOS
  - Ubuntu
  - Visual Studio 2019

init:
  - git config --global core.autocrlf input

for:
-
  matrix:
    only:
      - image: Ubuntu

  branches:
    only:
      - build-graal1
  artifacts:
  - path: client/target/graalcp/sbt.client.client
    name: linux-sbt-client

  install:
  - curl -sL https://github.com/sbt/sbt/releases/download/v1.3.10/sbt-1.3.10.tgz > ~/sbt-bin.tgz
  - mkdir ~/sbt
  - tar -xf ~/sbt-bin.tgz --directory ~/sbt
  - curl -sL https://raw.githubusercontent.com/shyiko/jabba/0.11.0/install.sh | bash && . ~/.jabba/jabba.sh
  - jabba install adopt@1.8.0-222
  - jabba use adopt@1.8.0-222
  - jabba install zulu@1.7.262
  - curl -sL https://github.com/graalvm/graalvm-ce-dev-builds/releases/download/20.2.0-dev-20200522_0210/graalvm-ce-java8-darwin-amd64-20.2.0-dev.tar.gz > graalvm.tar.gz 
  - tar -xf graalvm.tar.gz
  - export PATH="~/sbt/sbt/bin:$PATH"
  - export PATH="$PATH:~/.jabba/jdk/adopt@1.8.0-222/bin"
  - export JAVA_HOME="~/.jabba/jdk/adopt@1.8.0-222"
  - export SBT_OPTS="-XX:MaxPermSize=1g -Xmx1g -Dfile.encoding=UTF8"

  cache:
    - /home/appveyor/.jabba/jdk
    - /home/appveyor/.sbt
    - /Users/appveyor/.ivy2

  test_script:
    - DIR="$(pwd)"
    - git clone --single-branch --branch jline-v2 https://github.com/eatkins/launcher launcher
    - git clone --single-branch --branch sbt-fork https://github.com/eatkins/jline2 jline2
    - git clone --single-branch --branch full-jni https://github.com/eatkins/ipcsocket ipcsocket
    - cd $DIR/launcher
    - sbt --java-home ~/.jabba/jdk/zulu@1.7.262 publishLocal
    - cd $DIR/jline2
    - sbt --java-home ~/.jabba/jdk/adopt@1.8.0-222 publishLocal
    - cd $DIR/ipcsocket
    - sbt --java-home ~/.jabba/jdk/adopt@1.8.0-222 publishLocal
    - export PATH="$PATH:~/.jabba/jdk/adopt@1.8.0-222/bin"
    - export PATH="$PATH:$DIR/graalvm-ce-java8-20.2.0-dev/bin"
    - gu install native-image
    - cd $DIR
    - sbt --java-home ~/.jabba/jdk/adopt@1.8.0-222 -Dsbt.native-image=$DIR/graalvm-ce-java8-20.2.0-dev/Contents/Home/bin/native-image "sbtClientProj/genNativeExecutable"

-
  matrix:
    only:
      - image: MacOS

  branches:
    only:
      - build-graal1
  artifacts:
  - path: client/target/graalcp/sbt.client.client
    name: mac-sbt-client

  install:
  - curl -sL https://github.com/sbt/sbt/releases/download/v1.3.10/sbt-1.3.10.tgz > ~/sbt-bin.tgz
  - mkdir ~/sbt
  - tar -xf ~/sbt-bin.tgz --directory ~/sbt
  - curl -sL https://raw.githubusercontent.com/shyiko/jabba/0.11.0/install.sh | bash && . ~/.jabba/jabba.sh
  - jabba install adopt@1.8.0-222
  - jabba use adopt@1.8.0-222
  - jabba install zulu@1.7.262
  - curl -sL https://github.com/graalvm/graalvm-ce-dev-builds/releases/download/20.2.0-dev-20200522_0210/graalvm-ce-java8-darwin-amd64-20.2.0-dev.tar.gz > graalvm.tar.gz 
  - tar -xf graalvm.tar.gz
  - export PATH="~/sbt/sbt/bin:$PATH"
  - export PATH="$PATH:~/.jabba/jdk/adopt@1.8.0-222/bin"
  - export JAVA_HOME="~/.jabba/jdk/adopt@1.8.0-222"
  - export SBT_OPTS="-XX:MaxPermSize=1g -Xmx1g -Dfile.encoding=UTF8"

  cache:
    - /Users/appveyor/.jabba/jdk
    - /Users/appveyor/.ivy2

  test_script:
    - DIR="$(pwd)"
    - git clone --single-branch --branch jline-v2 https://github.com/eatkins/launcher launcher
    - git clone --single-branch --branch sbt-fork https://github.com/eatkins/jline2 jline2
    - git clone --single-branch --branch full-jni https://github.com/eatkins/ipcsocket ipcsocket
    - cd $DIR/launcher
    - sbt --java-home ~/.jabba/jdk/zulu@1.7.262/Contents/Home publishLocal
    - cd $DIR/jline2
    - sbt --java-home ~/.jabba/jdk/adopt@1.8.0-222/Contents/Home publishLocal
    - cd $DIR/ipcsocket
    - sbt --java-home ~/.jabba/jdk/adopt@1.8.0-222/Contents/Home publishLocal
    - export PATH="$PATH:~/.jabba/jdk/adopt@1.8.0-222/Contents/Home/bin"
    - export PATH="$PATH:$DIR/graalvm-ce-java8-20.2.0-dev/Contents/Home/bin"
    - gu install native-image
    - cd $DIR
    - sbt --java-home ~/.jabba/jdk/adopt@1.8.0-222/Contents/Home -Dsbt.native-image=$DIR/graalvm-ce-java8-20.2.0-dev/Contents/Home/bin/native-image "sbtClientProj/genNativeExecutable"

-
  matrix:
    only:
      - image: Visual Studio 2019
  branches:
    only:
      - build-graal
  install:
    - cinst jdk8 -params 'installdir=C:\\jdk8'
    - SET CI=true
    - choco install windows-sdk-7.1 kb2519277
    - call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd"

    - ps: |
        Add-Type -AssemblyName System.IO.Compression.FileSystem
        if (!(Test-Path -Path "C:\sbt" )) {
          (new-object System.Net.WebClient).DownloadFile(
            'https://github.com/sbt/sbt/releases/download/v1.3.10/sbt-1.3.10.zip',
            'C:\sbt-bin.zip'
          )
          [System.IO.Compression.ZipFile]::ExtractToDirectory("C:\sbt-bin.zip", "C:\sbt")
        }
        if (!(Test-Path -Path "C:\graalvm-ce-java8-20.2.0-dev" )) {
          (new-object System.Net.WebClient).DownloadFile(
            'https://github.com/graalvm/graalvm-ce-dev-builds/releases/download/20.2.0-dev-20200522_0210/graalvm-ce-java8-windows-amd64-20.2.0-dev.zip',
            'C:\graalvm-ce-java8-20.2.0-dev.zip'
          )
          [System.IO.Compression.ZipFile]::ExtractToDirectory("C:\graalvm-ce-java8-20.2.0-dev.zip", "C:\")
        }
        if (!(Test-Path -Path "C:\zulu-jdk7" )) {
          (new-object System.Net.WebClient).DownloadFile(
            'https://cdn.azul.com/zulu/bin/zulu7.38.0.11-ca-jdk7.0.262-win_x64.zip',
            'C:\zulu-jdk7.zip'
          )
          [System.IO.Compression.ZipFile]::ExtractToDirectory("C:\zulu-jdk7.zip", "C:\")
        }
    - SET PATH=C:\graalvm-ce-java8-20.2.0-dev\bin;%PATH%
    - SET PATH=C:\sbt\sbt\bin;%PATH%
    - SET JAVA_HOME=C:\jdk8
    - SET SBT_OPTS=-XX:MaxPermSize=2g -Xmx4g -Dsbt.supershell=never -Dfile.encoding=UTF8
    - git clone --single-branch --branch jline-v2 https://github.com/eatkins/launcher C:\launcher
    - git clone --single-branch --branch sbt-fork https://github.com/eatkins/jline2 C:\jline2
    - git clone --single-branch --branch full-jni https://github.com/eatkins/ipcsocket C:\ipcsocket
    - cd C:\launcher
    - sbt --java-home C:\zulu7.38.0.11-ca-jdk7.0.262-win_x64 publishLocal
    - SET PATH=C:\jdk8\bin;%PATH%
    - cd C:\jline2
    - sbt --java-home %JAVA_HOME% publishLocal
    - cd C:\ipcsocket
    - sbt --java-home %JAVA_HOME% publishLocal
    - gu install native-image
    - mklink /D C:\Users\%APPVEYOR_ACCOUNT_NAME%\native-image C:\graalvm-ce-java8-20.2.0-dev\bin\native-image.cmd
    - cd %APPVEYOR_BUILD_FOLDER%

  cache:
    - '%USERPROFILE%/.sbt'

  test_script:
    - sbt -Dsbt.native-image=C:\graalvm-ce-java8-20.2.0-dev\bin\native-image.cmd "sbtClientProj/genNativeExecutable"
-
  matrix:
    only:
      - image: Visual Studio 2019
  branches:
    except:
      - build-graal
      - build-graal1
  install:
    - cinst jdk8 -params 'installdir=C:\\jdk8'
    - SET JAVA_HOME=C:\jdk8
    - SET PATH=C:\jdk8\bin;%PATH%
    - SET CI=true

    - ps: |
        Add-Type -AssemblyName System.IO.Compression.FileSystem
        if (!(Test-Path -Path "C:\sbt" )) {
          (new-object System.Net.WebClient).DownloadFile(
            'https://github.com/sbt/sbt/releases/download/v1.3.10/sbt-1.3.10.zip',
            'C:\sbt-bin.zip'
          )
          [System.IO.Compression.ZipFile]::ExtractToDirectory("C:\sbt-bin.zip", "C:\sbt")
        }
    - SET PATH=C:\sbt\sbt\bin;%PATH%
    - SET SBT_OPTS=-XX:MaxPermSize=2g -Xmx4g -Dsbt.supershell=never -Dfile.encoding=UTF8

  cache:
    - '%USERPROFILE%/.sbt'

  test_script:
    - sbt "set ThisBuild / crossPaths := false; set crossPaths := false; set ThisBuild / version := \"2.14.7-SNAPSHOT\"; set ThisBuild / organization := \"jline\"; jline/publishLocal; set ThisBuild / version := \"1.0.1-SNAPSHOT\";set ThisBuild / organization := \"org.scala-sbt.ipcsocket\"; ipcsocket / publishLocal"
    - sbt "scripted actions/* classloader-cache/* nio/* watch/*" "testOnly sbt.ServerSpec"

